summarise(N = n (), mean = mean(FirstPumpArriving_AttendanceTime, na.rm = TRUE), quantile10 = quantile(FirstPumpArriving_AttendanceTime, 0.10, na.rm = TRUE), quantile90 = quantile(FirstPumpArriving_AttendanceTime, 0.90,na.rm = TRUE))
spl_services %>%
filter!is.na(fire_data$SpecialServiceType) %>%
spl_services %>%
filter(!is.na(fire_data$SpecialServiceType)) %>%
group_by(SpecialServiceType) %>%
summarise(N = n (), mean = mean(FirstPumpArriving_AttendanceTime, na.rm = TRUE), quantile10 = quantile(FirstPumpArriving_AttendanceTime, 0.10, na.rm = TRUE), quantile90 = quantile(FirstPumpArriving_AttendanceTime, 0.90,na.rm = TRUE))
spl_services <- filter(fire_data,IncidentGroup == "SpecialServices") %>%
filter(!is.na(fire_data$SpecialServiceType)) %>%
group_by(SpecialServiceType) %>%
summarise(N = n (), mean = mean(FirstPumpArriving_AttendanceTime, na.rm = TRUE), quantile10 = quantile(FirstPumpArriving_AttendanceTime, 0.10, na.rm = TRUE), quantile90 = quantile(FirstPumpArriving_AttendanceTime, 0.90,na.rm = TRUE))
spl_services <- filter(fire_data,IncidentGroup == "SpecialServices") %>%
filter(!is.na(SpecialServiceType)) %>%
group_by(SpecialServiceType) %>%
summarise(N = n (), mean = mean(FirstPumpArriving_AttendanceTime, na.rm = TRUE), quantile10 = quantile(FirstPumpArriving_AttendanceTime, 0.10, na.rm = TRUE), quantile90 = quantile(FirstPumpArriving_AttendanceTime, 0.90,na.rm = TRUE))
print(spl_services)
spl_services <- fire_data[!is.na(fire_data$SpecialServiceType),]
spl_services %>%
filter(IncidentGroup=="Special Service")%>%
group_by(SpecialServiceType) %>%
summarise(N = n (), mean = mean(FirstPumpArriving_AttendanceTime, na.rm = TRUE), quantile10 = quantile(FirstPumpArriving_AttendanceTime, 0.10, na.rm = TRUE), quantile90 = quantile(FirstPumpArriving_AttendanceTime, 0.90,na.rm = TRUE))
spl_services <- fire_data[!is.na(fire_data$SpecialServiceType),]
spl_services %>%
filter(IncidentGroup=="Special Service")%>%
group_by(SpecialServiceType) %>%
summarise(N = n (), mean = mean(FirstPumpArriving_AttendanceTime, na.rm = TRUE), Quantile10 = quantile(FirstPumpArriving_AttendanceTime, 0.10, na.rm = TRUE), Quantile90 = quantile(FirstPumpArriving_AttendanceTime, 0.90,na.rm = TRUE))
spl_services <- fire_data[!is.na(fire_data$SpecialServiceType),]
spl_services %>%
filter(IncidentGroup=="Special Service")%>%
group_by(SpecialServiceType) %>%
summarise(Frequency = n (), Mean = mean(FirstPumpArriving_AttendanceTime, na.rm = TRUE), Quantile10 = quantile(FirstPumpArriving_AttendanceTime, 0.10, na.rm = TRUE), Quantile90 = quantile(FirstPumpArriving_AttendanceTime, 0.90,na.rm = TRUE))
spl_services <- fire_data[!is.na(fire_data$SpecialServiceType),]
spl_services %>%
filter(IncidentGroup=="Special Service")%>%
group_by(SpecialServiceType) %>%
summarise(Frequency = n (), Mean_Response_Time = mean(FirstPumpArriving_AttendanceTime, na.rm = TRUE), Quantile10 = quantile(FirstPumpArriving_AttendanceTime, 0.10, na.rm = TRUE), Quantile90 = quantile(FirstPumpArriving_AttendanceTime, 0.90,na.rm = TRUE))
fire_data <- mutate(fire_data, response_time =FirstPumpArriving_AttendanceTime ) %>%filter(!is.na(response_time))
mean_time_incidentgroup  <- fire_data %>% group_by(IncidentGroup) %>% summarise(mean=mean(response_time,na.rm=T ),Frequency=n())
overall_meantime = mean(fire_data$FirstPumpArriving_AttendanceTime)
print(overall_meantime)
print(mean_time_incidentgroup)
ggplot(data = fire_data, aes(FirstPumpArriving_AttendanceTime)) +
geom_histogram(binwidth = 1, na.rm = TRUE , color = "orange") + geom_vline(xintercept = mean(fire_data$FirstPumpArriving_AttendanceTime, na.rm = T), color="black")+
labs(x = "Distribution of Response Time ", y = "Frequency",title="Overall Mean Response Time")
overall_meantime = mean(response_time)
print(overall_meantime)
fire_data <- mutate(fire_data, response_time =FirstPumpArriving_AttendanceTime ) %>%filter(!is.na(response_time))
mean_time_incidentgroup  <- fire_data %>% group_by(IncidentGroup) %>% summarise(mean=mean(response_time,na.rm=T ),Frequency=n())
overall_meantime = mean(fire_data$FirstPumpArriving_AttendanceTime)
print(overall_meantime)
print(mean_time_incidentgroup)
ggplot(data = fire_data, aes(FirstPumpArriving_AttendanceTime)) +
geom_histogram(binwidth = 1, na.rm = TRUE , color = "orange") + geom_vline(xintercept = mean(fire_data$FirstPumpArriving_AttendanceTime, na.rm = T), color="black")+
labs(x = "Distribution of Response Time ", y = "Frequency",title="Overall Mean Response Time")
mean_time_incidentgroup  <- fire_data %>% group_by(IncidentGroup) %>% summarise(mean=mean(response_time,na.rm=T ),Frequency=n())
print(mean_time_incidentgroup)
(fire_data.summary <- fire_data %>% summarise(mean_time=mean(response_time, na.rm=TRUE), sd_time=sd(response_time, na.rm=TRUE), N_time=n())) #summary table of total population
fire_data.E.G <- fire_data %>% filter(IncGeo_BoroughName %in% c("EALING", "GREENWICH"), na.rm=TRUE)
fire_data.E.G.summarise<-fire_data.E.G  %>% group_by(IncGeo_BoroughName) %>% summarise(mean=mean(response_time))
fire_data.E.G  %>% group_by(IncGeo_BoroughName) %>% summarise(mean=mean(response_time))
fire_data.E.G.summarise<-fire_data.E.G  %>% group_by(IncGeo_BoroughName) %>% summarise(mean=mean(response_time , na.rm=TRUE), Freqquency = n())
fire_data.E.G  %>% group_by(IncGeo_BoroughName) %>% summarise(mean=mean(response_time))
print(fire_data.E.G.summarise)
fire_data.E.G <- fire_data %>% filter(IncGeo_BoroughName %in% c("EALING", "GREENWICH"), na.rm=TRUE)
fire_data.E.G.summarise<-fire_data.E.G  %>% group_by(IncGeo_BoroughName) %>% summarise(Mean_time=mean(response_time , na.rm=TRUE), Freqquency = n())
print(fire_data.E.G.summarise)
fire_data.E.G <- fire_data %>% filter(IncGeo_BoroughName %in% c("EALING", "GREENWICH"), na.rm=TRUE)
fire_data.E.G.summarise<-fire_data.E.G  %>% group_by(IncGeo_BoroughName) %>% summarise(Mean=mean(response_time , na.rm=TRUE), Freqquency = n())
print(fire_data.E.G.summarise)
ggplot(fire_data.E.G, aes(x=response_time)) +
geom_histogram(aes(y=..density..), binwidth=2) +
stat_function(fun=function(x) {dnorm(x, mean=fire_data.summary$mean_time, sd=fire_data.summary$sd_time)}, col="red") + geom_vline(data=fire_data.summary, mapping=aes(xintercept=fire_data.summary$mean_time), col="white") +
labs(x="Response Time", y="Density", title="Response Time from Eagline and Greenwich")
ggplot(fire_data.E.G, aes(response_time,..density.., fill=IncGeo_BoroughName)) + geom_histogram(binwidth=2,position="identity", alpha=.5) + labs(x="Response Time", y="Density", fill="IncGeo_BoroughName") + geom_vline(data=fire_data.E.G.summarise, mapping=aes(xintercept=fire_data.E.G.summarise$mean), col="white")
ggplot(fire_data.E.G, aes(response_time,..density.., fill=IncGeo_BoroughName)) + geom_histogram(binwidth=2,position="identity", alpha=.5) + labs(x="Response Time", y="Density", fill="IncGeo_BoroughName") + geom_vline(data=fire_data.E.G.summarise, mapping=aes(xintercept=fire_data.E.G.summarise$mean), col="white")
#Import Required Libraries
library(tidyverse)
library(dplyr)
library(gridExtra)
library(nycflights13)
library(emmeans)
options(width=100)
set.seed(9999) # Set the random seed to make sure you get the same results as me
#Import Data Set
fire_data = read_csv("London_Fire_data.csv")
str(fire_data)
fire_data <- mutate(fire_data, response_time =FirstPumpArriving_AttendanceTime ) %>%filter(!is.na(response_time))
(fire_data.summary <- fire_data %>% summarise(mean_time=mean(response_time, na.rm=TRUE), sd_time=sd(response_time, na.rm=TRUE), N_time=n())) #summary table of total population
fire_data.E.G <- fire_data %>% filter(IncGeo_BoroughName %in% c("EALING", "GREENWICH"), na.rm=TRUE)
fire_data.E.G.summarise<-fire_data.E.G  %>% group_by(IncGeo_BoroughName) %>% summarise(mean=mean(response_time))
fire_data.E.G  %>% group_by(IncGeo_BoroughName) %>% summarise(mean=mean(response_time))
ggplot(fire_data.E.G, aes(x=response_time)) +
geom_histogram(aes(y=..density..), binwidth=2) +
stat_function(fun=function(x) {dnorm(x, mean=fire_data.summary$mean_time, sd=fire_data.summary$sd_time)}, col="red") + geom_vline(data=fire_data.summary, mapping=aes(xintercept=fire_data.summary$mean_time), col="white") +
labs(x="Response Time", y="Density", title="Response Time from Eagline and Greenwich")
ggplot(fire_data.E.G, aes(response_time,..density.., fill=IncGeo_BoroughName)) + geom_histogram(binwidth=2,position="identity", alpha=.5) + labs(x="Response Time", y="Density", fill="IncGeo_BoroughName") + geom_vline(data=fire_data.E.G.summarise, mapping=aes(xintercept=fire_data.E.G.summarise$mean), col="white")
fire_data.E.G <- fire_data %>% filter(IncGeo_BoroughName %in% c("EALING", "GREENWICH"), na.rm=TRUE)
fire_data.E.G.summarise<-fire_data.E.G  %>% group_by(IncGeo_BoroughName) %>% summarise(Mean=mean(response_time , na.rm=TRUE), Freqquency = n())
print(fire_data.E.G.summarise)
ggplot(fire_data.E.G, aes(x=response_time)) +
geom_histogram(aes(y=..density..), binwidth=2) +
stat_function(fun=function(x) {dnorm(x, mean=fire_data.summary$mean_time, sd=fire_data.summary$sd_time)}, col="red") + geom_vline(data=fire_data.summary, mapping=aes(xintercept=fire_data.summary$mean_time), col="white") +
labs(x="Response Time", y="Density", title="Response Time from Eagline and Greenwich")
ggplot(fire_data.E.G, aes(response_time,..density.., fill=IncGeo_BoroughName)) + geom_histogram(binwidth=2,position="identity", alpha=.5) + labs(x="Response Time", y="Density", fill="IncGeo_BoroughName") + geom_vline(data=fire_data.E.G.summarise, mapping=aes(xintercept=fire_data.E.G.summarise$mean), col="white")
fire_data.E.G <- fire_data %>% filter(IncGeo_BoroughName %in% c("EALING", "GREENWICH"), na.rm=TRUE)
fire_data.E.G  %>% group_by(IncGeo_BoroughName) %>% summarise(mean=mean(response_time))
fire_data.E.G.summarise<-fire_data.E.G  %>% group_by(IncGeo_BoroughName) %>% summarise(Mean=mean(response_time , na.rm=TRUE), Freqquency = n())
print(fire_data.E.G.summarise)
ggplot(fire_data.E.G, aes(x=response_time)) +
geom_histogram(aes(y=..density..), binwidth=2) +
stat_function(fun=function(x) {dnorm(x, mean=fire_data.summary$mean_time, sd=fire_data.summary$sd_time)}, col="red") + geom_vline(data=fire_data.summary, mapping=aes(xintercept=fire_data.summary$mean_time), col="white") +
labs(x="Response Time", y="Density", title="Response Time from Eagline and Greenwich")
ggplot(fire_data.E.G, aes(response_time,..density.., fill=IncGeo_BoroughName)) + geom_histogram(binwidth=2,position="identity", alpha=.5) + labs(x="Response Time", y="Density", fill="IncGeo_BoroughName") + geom_vline(data=fire_data.E.G.summarise, mapping=aes(xintercept=fire_data.E.G.summarise$mean), col="white")
fire_data.E.G <- fire_data %>% filter(IncGeo_BoroughName %in% c("EALING", "GREENWICH"), na.rm=TRUE)
fire_data.E.G  %>% group_by(IncGeo_BoroughName) %>% summarise(mean=mean(response_time))
fire_data.E.G.summarise<-fire_data.E.G  %>% group_by(IncGeo_BoroughName) %>% summarise(mean=mean(response_time , na.rm=TRUE), Freqquency = n())
print(fire_data.E.G.summarise)
ggplot(fire_data.E.G, aes(x=response_time)) +
geom_histogram(aes(y=..density..), binwidth=2) +
stat_function(fun=function(x) {dnorm(x, mean=fire_data.summary$mean_time, sd=fire_data.summary$sd_time)}, col="red") + geom_vline(data=fire_data.summary, mapping=aes(xintercept=fire_data.summary$mean_time), col="white") +
labs(x="Response Time", y="Density", title="Response Time from Eagline and Greenwich")
ggplot(fire_data.E.G, aes(response_time,..density.., fill=IncGeo_BoroughName)) + geom_histogram(binwidth=2,position="identity", alpha=.5) + labs(x="Response Time", y="Density", fill="IncGeo_BoroughName") + geom_vline(data=fire_data.E.G.summarise, mapping=aes(xintercept=fire_data.E.G.summarise$mean), col="white")
fire_data.E.G <- fire_data %>% filter(IncGeo_BoroughName %in% c("EALING", "GREENWICH"), na.rm=TRUE)
fire_data.E.G.summarise<-fire_data.E.G  %>% group_by(IncGeo_BoroughName) %>% summarise(Mean=mean(response_time , na.rm=TRUE), Freqquency = n())
print(fire_data.E.G.summarise)
ggplot(fire_data.E.G, aes(x=response_time)) +
geom_histogram(aes(y=..density..), binwidth=2) +
stat_function(fun=function(x) {dnorm(x, mean=fire_data.summary$mean_time, sd=fire_data.summary$sd_time)}, col="red") + geom_vline(data=fire_data.summary, mapping=aes(xintercept=fire_data.summary$mean_time), col="white") +
labs(x="Response Time", y="Density", title="Response Time from Eagline and Greenwich")
ggplot(fire_data.E.G, aes(response_time,..density.., fill=IncGeo_BoroughName)) + geom_histogram(binwidth=2,position="identity", alpha=.5) + labs(x="Response Time", y="Density", fill="IncGeo_BoroughName") + geom_vline(data=fire_data.E.G.summarise, mapping=aes(xintercept=fire_data.E.G.summarise$Mean), col="white")
t.test(
response_time~IncGeo_BoroughName,
data=fire_data.E.G
)
(  m.rt.by.IncGeo_BoroughName.emm <- emmeans(m.rt.by.IncGeo_BoroughName, ~IncGeo_BoroughName)  )
(  m.rt.by.IncGeo_BoroughName.contrast <- confint(pairs(m.rt.by.IncGeo_BoroughName.emm))  )
grid.arrange(
ggplot(summary(m.rt.by.IncGeo_BoroughName.emm), aes(x=IncGeo_BoroughName, y=emmean, ymin=lower.CL, ymax=upper.CL)) +
geom_point() + geom_linerange() +
labs(y="Response Time", x="Borough Name", subtitle="Error bars are 95% CIs", title="Mean Response TIme") + ylim(305,325),
ggplot(m.rt.by.IncGeo_BoroughName.contrast, aes(x=contrast, y=estimate, ymin=lower.CL, ymax=upper.CL)) +
geom_point() + geom_linerange() +
labs(y="Difference in Response Time", x="Contrast", subtitle="Error bars are 95% CIs", title="Difference in Response Time") + ylim(-1,10) +
geom_hline(yintercept=0, lty=2),
ncol=2
)
spl_services
spl_services <- fire_data[!is.na(fire_data$SpecialServiceType),]
spl<-spl_services %>%
filter(IncidentGroup=="Special Service")%>%
group_by(SpecialServiceType) %>%
summarise(Frequency = n (), Mean_Response_Time = mean(FirstPumpArriving_AttendanceTime, na.rm = TRUE), Quantile10 = quantile(FirstPumpArriving_AttendanceTime, 0.10, na.rm = TRUE), Quantile90 = quantile(FirstPumpArriving_AttendanceTime, 0.90,na.rm = TRUE))
spl_services
spl_services <- fire_data[!is.na(fire_data$SpecialServiceType),]
spl_services<-spl_services %>%
filter(IncidentGroup=="Special Service")%>%
group_by(SpecialServiceType) %>%
summarise(Frequency = n (), Mean_Response_Time = mean(FirstPumpArriving_AttendanceTime, na.rm = TRUE), Quantile10 = quantile(FirstPumpArriving_AttendanceTime, 0.10, na.rm = TRUE), Quantile90 = quantile(FirstPumpArriving_AttendanceTime, 0.90,na.rm = TRUE))
spl_services
t_test<-t.test(
response_time~IncGeo_BoroughName,
data=fire_data.E.G
)
t_test<-t.test(
response_time~IncGeo_BoroughName,
data=fire_data.E.G
)
print(t_test)
print(t_test)
cost_data
ggplot(data = fire_data, aes(FirstPumpArriving_AttendanceTime)) +
geom_histogram(binwidth = 1, na.rm = TRUE , color = "orange") + geom_vline(xintercept = mean(fire_data$FirstPumpArriving_AttendanceTime, na.rm = T), color="black")+
labs(x = "Distribution of Response Time ", y = "Frequency",title="Overall Mean Response Time")
fire_data <- mutate(fire_data, response_time =FirstPumpArriving_AttendanceTime ) %>%filter(!is.na(response_time))
mean_time_incidentgroup  <- fire_data %>% group_by(IncidentGroup) %>% summarise(mean=mean(response_time,na.rm=T ),Frequency=n())
overall_meantime = mean(fire_data$FirstPumpArriving_AttendanceTime)
print(overall_meantime)
print(mean_time_incidentgroup)
ggplot(data = fire_data, aes(FirstPumpArriving_AttendanceTime)) +
geom_histogram(binwidth = 1, na.rm = TRUE , color = "orange") + geom_vline(xintercept = mean(fire_data$FirstPumpArriving_AttendanceTime, na.rm = T), color="black")+
labs(x = "Distribution of Response Time ", y = "Frequency",title="Overall Mean Response Time")
m.rt.by.IncGeo_BoroughName <- lm(response_time~IncGeo_BoroughName, data=fire_data.E.G)
(  m.rt.by.IncGeo_BoroughName.emm <- emmeans(m.rt.by.IncGeo_BoroughName, ~IncGeo_BoroughName)  )
(  m.rt.by.IncGeo_BoroughName.contrast <- confint(pairs(m.rt.by.IncGeo_BoroughName.emm))  )
(  m.rt.by.IncGeo_BoroughName.contrast <- confint(pairs(m.rt.by.IncGeo_BoroughName.emm))  )
grid.arrange(
ggplot(summary(m.rt.by.IncGeo_BoroughName.emm), aes(x=IncGeo_BoroughName, y=emmean, ymin=lower.CL, ymax=upper.CL)) +
geom_point() + geom_linerange() +
labs(y="Response Time", x="Borough Name", subtitle="Error bars are 95% CIs", title="Mean Response TIme") + ylim(305,325),
ggplot(m.rt.by.IncGeo_BoroughName.contrast, aes(x=contrast, y=estimate, ymin=lower.CL, ymax=upper.CL)) +
geom_point() + geom_linerange() +
labs(y="Difference in Response Time", x="Contrast", subtitle="Error bars are 95% CIs", title="Difference in Response Time") + ylim(-1,10) +
geom_hline(yintercept=0, lty=2),
ncol=2
)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`))
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`))
ggplot(fire_data) + geom_histogram(aes(`FirstPumpArriving_AttendanceTime`))
fire_data <- filter(fire_data,
!is.na(`Notional Cost (£)`),
`Notional Cost (£)` <10000,
!(Marital_Status %in% c("YOLO", "Absurd", "Alone")))
fire_data <- filter(fire_data,
!is.na(`Notional Cost (£)`),
`Notional Cost (£)` <10000)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`))
fire_data <- filter(fire_data,
!is.na(`Notional Cost (£)`),
`Notional Cost (£)` <2500)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`))
fire_data <- filter(fire_data,
!is.na(`Notional Cost (£)`),
`Notional Cost (£)` <10000
)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`))
#Import Required Libraries
library(tidyverse)
library(dplyr)
library(gridExtra)
library(nycflights13)
library(emmeans)
options(width=100)
set.seed(9999) # Set the random seed to make sure you get the same results as me
#Import Data Set
fire_data = read_csv("London_Fire_data.csv")
summary(fire_data)
#Import Required Libraries
library(tidyverse)
library(dplyr)
library(gridExtra)
library(nycflights13)
library(emmeans)
options(width=100)
set.seed(9999) # Set the random seed to make sure you get the same results as me
#Import Data Set
fire_data = read_csv("London_Fire_data.csv")
summary(fire_data)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`))
ggplot(fire_data) + geom_histogram(aes(`FirstPumpArriving_AttendanceTime`))
fire_data <- filter(fire_data,
!is.na(`Notional Cost (£)`),
`Notional Cost (£)` <10000
)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`))
ggplot(fire_data) + geom_histogram(aes(`FirstPumpArriving_AttendanceTime`))
ggplot(fire_data) + geom_histogram(aes(`FirstPumpArriving_AttendanceTime`<800))
fire_data <- mutate(fire_data, response_time =FirstPumpArriving_AttendanceTime ) %>%filter(!is.na(response_time))
mean_time_incidentgroup  <- fire_data %>% group_by(IncidentGroup) %>% summarise(mean=mean(response_time,na.rm=T ),Frequency=n())
overall_meantime = mean(fire_data$FirstPumpArriving_AttendanceTime)
print(overall_meantime)
print(mean_time_incidentgroup)
ggplot(data = fire_data, aes(FirstPumpArriving_AttendanceTime)) +
geom_histogram(binwidth = 1, na.rm = TRUE , color = "orange") + geom_vline(xintercept = mean(fire_data$FirstPumpArriving_AttendanceTime, na.rm = T), color="black")+
labs(x = "Distribution of Response Time ", y = "Frequency",title="Overall Mean Response Time")
filter(fire_data, FirstPumpArriving_AttendanceTime>800)
ggplot(fire_data) + geom_histogram(aes(`FirstPumpArriving_AttendanceTime`))
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`))
filter(fire_data, 'Notional Cost (£)'>10000)
ggplot(fire_data) + geom_histogram(aes('Notional Cost (£)'), binwidth = 1000) + xlim(0, 20000)
ggplot(fire_data) + geom_histogram(aes('Notional Cost (£)'), binwidth = 1) + xlim(0, 20000)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`))
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`))+ xlim(0, 20000)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`))+ xlim(0, 2000)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`), binwidth = 1)+ xlim(0, 2000)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`), binwidth = 1000)+ xlim(0, 2000)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`), binwidth = 10)+ xlim(0, 2000)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`), binwidth = 100)+ xlim(0, 2000)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`), binwidth = 200)+ xlim(0, 2000)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`), binwidth = 500)+ xlim(0, 2000)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`), binwidth = 300)+ xlim(0, 2000)
filter(fire_data, 'Notional Cost (£)'>2000)
filter(fire_data, 'Notional Cost (£)'<2000)
filter(fire_data, 'Notional Cost (£)'>2000)
cost_data <- fire_data%>%
group_by(IncidentGroup)%>%
summarise(total_cost = sum(`Notional Cost (£)`, na.rm = TRUE), mean_cost = mean(`Notional Cost (£)`, na.rm = TRUE), Number_of_Alarms=n())
print(cost_data)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`), binwidth = 300)#+ xlim(0, 2000)
#Import Required Libraries
library(tidyverse)
library(dplyr)
library(gridExtra)
library(nycflights13)
library(emmeans)
options(width=100)
set.seed(9999) # Set the random seed to make sure you get the same results as me
#Import Data Set
fire_data = read_csv("London_Fire_data.csv")
summary(fire_data)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`), binwidth = 300)
ggplot(fire_data) + geom_histogram(aes(`FirstPumpArriving_AttendanceTime`))
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`), binwidth = 1000)
ggplot(fire_data) + geom_histogram(aes(`Notional Cost (£)`))
ggplot(fire_data) + geom_histogram(aes(`FirstPumpArriving_AttendanceTime`))
ggplot(fire_data) + geom_histogram(aes(`FirstPumpArriving_AttendanceTime`),binwidth = 1)
cost_data <- fire_data%>%
group_by(IncidentGroup)%>%
summarise(total_cost = sum(`Notional Cost (£)`, na.rm = TRUE), mean_cost = mean(`Notional Cost (£)`, na.rm = TRUE), Number_of_Alarms=n())
print(cost_data)
fire_data <- filter(fire_data, na.rm = T)
ggplot(data = fire_data, aes(FirstPumpArriving_AttendanceTime, color = IncidentGroup)) +
geom_histogram(binwidth = 1, na.rm = TRUE ) +
geom_vline(xintercept = mean(fire_data$FirstPumpArriving_AttendanceTime, na.rm = T), color="black")+
facet_grid(IncidentGroup~.) +
xlim(0,700)+
labs(x = "Distribution of Response Time ", y = "Frequency of Incidents", title = "Mean Response Time for Different Incidents")
spl_services <- fire_data[!is.na(fire_data$SpecialServiceType),]
spl_services<-spl_services %>%
filter(IncidentGroup=="Special Service")%>%
group_by(SpecialServiceType) %>%
summarise(Frequency = n (), Mean_Response_Time = mean(FirstPumpArriving_AttendanceTime, na.rm = TRUE), Quantile10 = quantile(FirstPumpArriving_AttendanceTime, 0.10, na.rm = TRUE), Quantile90 = quantile(FirstPumpArriving_AttendanceTime, 0.90,na.rm = TRUE))
print(spl_service)
print(spl_services)
(fire_data.summary <- fire_data %>% summarise(mean_time=mean(response_time, na.rm=TRUE), sd_time=sd(response_time, na.rm=TRUE), N_time=n())) #summary table of total population
(fire_data.summary <- fire_data %>% summarise(mean_time=mean(response_time, na.rm=TRUE), sd_time=sd(response_time, na.rm=TRUE), N_time=n())) #summary table of total population
#Import Required Libraries
library(tidyverse)
library(dplyr)
library(gridExtra)
library(nycflights13)
library(emmeans)
options(width=100)
set.seed(9999) # Set the random seed to make sure you get the same results as me
#Import Data Set
fire_data = read_csv("London_Fire_data.csv")
#summary(fire_data)
#check for data quality and outliers
ggplot(fire_data) + geom_histogram(aes(`FirstPumpArriving_AttendanceTime`),binwidth = 1)
cost_data <- fire_data%>%
group_by(IncidentGroup)%>%
summarise(total_cost = sum(`Notional Cost (£)`, na.rm = TRUE), mean_cost = mean(`Notional Cost (£)`, na.rm = TRUE), Number_of_Alarms=n())
print(cost_data)
fire_data <- mutate(fire_data, response_time =FirstPumpArriving_AttendanceTime ) %>%filter(!is.na(response_time))
mean_time_incidentgroup  <- fire_data %>% group_by(IncidentGroup) %>% summarise(mean=mean(response_time,na.rm=T ),Frequency=n())
overall_meantime = mean(fire_data$FirstPumpArriving_AttendanceTime)
print(overall_meantime)
print(mean_time_incidentgroup)
ggplot(data = fire_data, aes(FirstPumpArriving_AttendanceTime)) +
geom_histogram(binwidth = 1, na.rm = TRUE , color = "orange") + geom_vline(xintercept = mean(fire_data$FirstPumpArriving_AttendanceTime, na.rm = T), color="black")+
labs(x = "Distribution of Response Time ", y = "Frequency",title="Overall Mean Response Time")
ggplot(data = fire_data, aes(FirstPumpArriving_AttendanceTime, color = IncidentGroup)) +
geom_histogram(binwidth = 1, na.rm = TRUE ) +
geom_vline(xintercept = mean(fire_data$FirstPumpArriving_AttendanceTime, na.rm = T), color="black")+
facet_grid(IncidentGroup~.) +
xlim(0,700)+
labs(x = "Distribution of Response Time ", y = "Frequency of Incidents", title = "Mean Response Time for Different Incidents")
spl_services <- fire_data[!is.na(fire_data$SpecialServiceType),]
spl_services<-spl_services %>%
filter(IncidentGroup=="Special Service")%>%
group_by(SpecialServiceType) %>%
summarise(Frequency = n (), Mean_Response_Time = mean(FirstPumpArriving_AttendanceTime, na.rm = TRUE), Quantile10 = quantile(FirstPumpArriving_AttendanceTime, 0.10, na.rm = TRUE), Quantile90 = quantile(FirstPumpArriving_AttendanceTime, 0.90,na.rm = TRUE))
print(spl_services)
(fire_data.summary <- fire_data %>% summarise(mean_time=mean(response_time, na.rm=TRUE), sd_time=sd(response_time, na.rm=TRUE), N_time=n())) #summary table of total population
(fire_data.summary <- fire_data %>% summarise(mean_time=mean(response_time, na.rm=TRUE), sd_time=sd(response_time, na.rm=TRUE), N_time=n()))
fire_data.E.G <- fire_data %>% filter(IncGeo_BoroughName %in% c("EALING", "GREENWICH"), na.rm=TRUE)
fire_data.E.G.summarise<-fire_data.E.G  %>% group_by(IncGeo_BoroughName) %>% summarise(Mean=mean(response_time , na.rm=TRUE), Freqquency = n())
print(fire_data.E.G.summarise)
ggplot(fire_data.E.G, aes(x=response_time)) +
geom_histogram(aes(y=..density..), binwidth=2) +
stat_function(fun=function(x) {dnorm(x, mean=fire_data.summary$mean_time, sd=fire_data.summary$sd_time)}, col="red") + geom_vline(data=fire_data.summary, mapping=aes(xintercept=fire_data.summary$mean_time), col="white") +
labs(x="Response Time", y="Density", title="Response Time from Eagline and Greenwich")
ggplot(fire_data.E.G, aes(response_time,..density.., fill=IncGeo_BoroughName)) + geom_histogram(binwidth=2,position="identity", alpha=.5) + labs(x="Response Time", y="Density", fill="IncGeo_BoroughName") + geom_vline(data=fire_data.E.G.summarise, mapping=aes(xintercept=fire_data.E.G.summarise$Mean), col="white")
ggplot(fire_data.E.G, aes(x=response_time)) +
geom_histogram(aes(y=..density..), binwidth=2) +
stat_function(fun=function(x) {dnorm(x, mean=fire_data.summary$mean_time, sd=fire_data.summary$sd_time)}, col="red") + geom_vline(data=fire_data.summary, mapping=aes(xintercept=fire_data.summary$mean_time), col="white") +
labs(x="Response Time", y="Density", title="Overall Response Time Graph")
ggplot(fire_data.E.G, aes(response_time,..density.., fill=IncGeo_BoroughName)) + geom_histogram(binwidth=2,position="identity", alpha=.5) + labs(x="Response Time", y="Density", fill="IncGeo_BoroughName", title="Response Time from Eagline and Greenwich") + geom_vline(data=fire_data.E.G.summarise, mapping=aes(xintercept=fire_data.E.G.summarise$Mean), col="white")
t_test<-t.test(
response_time~IncGeo_BoroughName,
data=fire_data.E.G
)
print(t_test)
m.rt.by.IncGeo_BoroughName <- lm(response_time~IncGeo_BoroughName, data=fire_data.E.G)
(  m.rt.by.IncGeo_BoroughName.emm <- emmeans(m.rt.by.IncGeo_BoroughName, ~IncGeo_BoroughName)  )
(  m.rt.by.IncGeo_BoroughName.contrast <- confint(pairs(m.rt.by.IncGeo_BoroughName.emm))  )
#check for data quality and outliers
ggplot(fire_data) + geom_histogram(aes(`FirstPumpArriving_AttendanceTime`))
#check for data quality and outliers
ggplot(fire_data) + geom_histogram(aes(`FirstPumpArriving_AttendanceTime`))
#check for data quality and outliers
ggplot(fire_data) +geom_histogram(aes(`FirstPumpArriving_AttendanceTime`))
#Import Required Libraries
library(tidyverse)
library(dplyr)
library(gridExtra)
library(nycflights13)
library(emmeans)
options(width=100)
set.seed(9999) # Set the random seed to make sure you get the same results as me
#Import Data Set
fire_data = read_csv("London_Fire_data.csv")
#summary(fire_data)
#Import Required Libraries
library(tidyverse)
library(dplyr)
library(gridExtra)
library(nycflights13)
library(emmeans)
options(width=100)
set.seed(9999) # Set the random seed to make sure you get the same results as me
#Import Data Set
fire_data = read_csv("London_Fire_data.csv")
#summary(fire_data)
#check for data quality and outliers
ggplot(fire_data) +geom_histogram(aes(`FirstPumpArriving_AttendanceTime`))
fire_data <- mutate(fire_data, response_time =FirstPumpArriving_AttendanceTime ) %>%filter(!is.na(response_time))
mean_time_incidentgroup  <- fire_data %>% group_by(IncidentGroup) %>% summarise(mean=mean(response_time,na.rm=T ),Frequency=n())
overall_meantime = mean(fire_data$FirstPumpArriving_AttendanceTime)
print(overall_meantime)
print(mean_time_incidentgroup)
ggplot(data = fire_data, aes(FirstPumpArriving_AttendanceTime)) +
geom_histogram(binwidth = 1, na.rm = TRUE , color = "orange") + geom_vline(xintercept = mean(fire_data$FirstPumpArriving_AttendanceTime, na.rm = T), color="black")+
labs(x = "Distribution of Response Time ", y = "Frequency",title="Overall Mean Response Time")
fire_data <- mutate(fire_data, response_time =FirstPumpArriving_AttendanceTime ) %>%filter(!is.na(response_time))
mean_time_incidentgroup  <- fire_data %>% group_by(IncidentGroup) %>% summarise(mean=mean(response_time,na.rm=T ),Frequency=n())
overall_meantime = mean(fire_data$FirstPumpArriving_AttendanceTime)
print(overall_meantime)
print(mean_time_incidentgroup)
ggplot(data = fire_data, aes(FirstPumpArriving_AttendanceTime)) +
geom_histogram(binwidth = 1, na.rm = TRUE , color = "orange") + geom_vline(xintercept = mean(fire_data$FirstPumpArriving_AttendanceTime, na.rm = T), color="black")+
labs(x = "Distribution of Response Time ", y = "Frequency",title="Overall Mean Response Time")
(fire_data.summary <- fire_data %>% summarise(mean_time=mean(response_time, na.rm=TRUE), sd_time=sd(response_time, na.rm=TRUE), N_time=n()))
(fire_data.summary <- fire_data %>% summarise(mean_time=mean(response_time, na.rm=TRUE), sd_time=sd(response_time, na.rm=TRUE), N_time=n()))
ggplot(fire_data.E.G, aes(x=response_time)) +
geom_histogram(aes(y=..density..), binwidth=2) +
stat_function(fun=function(x) {dnorm(x, mean=fire_data.summary$mean_time, sd=fire_data.summary$sd_time)}, col="red") + geom_vline(data=fire_data.summary, mapping=aes(xintercept=fire_data.summary$mean_time), col="white") +
labs(x="Response Time", y="Density", title="Overall Response Time Graph")
#Import Required Libraries
library(tidyverse)
library(dplyr)
library(gridExtra)
library(nycflights13)
library(emmeans)
options(width=100)
set.seed(9999) # Set the random seed to make sure you get the same results as me
#Import Data Set
fire_data = read_csv("London_Fire_data.csv")
#summary(fire_data)
ggplot(fire_data.E.G, aes(x=response_time)) +
geom_histogram(aes(y=..density..), binwidth=2) +
stat_function(fun=function(x) {dnorm(x, mean=fire_data.summary$mean_time, sd=fire_data.summary$sd_time)}, col="red") + geom_vline(data=fire_data.summary, mapping=aes(xintercept=fire_data.summary$mean_time), col="white") +
labs(x="Response Time", y="Density", title="Distribution of Overall Response Time Graph")
ggplot(fire_data.E.G, aes(response_time,..density.., fill=IncGeo_BoroughName)) + geom_histogram(binwidth=2,position="identity", alpha=.5) + labs(x="Response Time", y="Density", fill="IncGeo_BoroughName", title="Distribution of Response Time from Eagline and Greenwich") + geom_vline(data=fire_data.E.G.summarise, mapping=aes(xintercept=fire_data.E.G.summarise$Mean), col="white")
#Import Required Libraries
library(tidyverse)
library(dplyr)
library(gridExtra)
library(nycflights13)
library(emmeans)
options(width=100)
set.seed(9999) # Set the random seed to make sure you get the same results
#Import Data Set
fire_data = read_csv("London_Fire_data.csv")
summary(fire_data)
#Import Required Libraries
library(tidyverse)
library(dplyr)
library(gridExtra)
library(nycflights13)
library(emmeans)
options(width=100)
set.seed(9999) # Set the random seed to make sure you get the same results
#Import Required Libraries
library(tidyverse)
library(dplyr)
library(gridExtra)
library(nycflights13)
library(emmeans)
options(width=100)
set.seed(9999) # Set the random seed to make sure you get the same results
#Import Data Set
fire_data = read_csv("London_Fire_data.csv")
summary(fire_data)
#check for data quality and outliers
ggplot(fire_data) +geom_histogram(aes(`FirstPumpArriving_AttendanceTime`))
# The data is continutious and only few outliers or null value is present in few response which can be replaced with zero or removed.
cost_data <- fire_data%>%
group_by(IncidentGroup)%>%
summarise(total_cost = sum(`Notional Cost (£)`, na.rm = TRUE), mean_cost = mean(`Notional Cost (£)`, na.rm = TRUE), Number_of_Alarms=n())
print(cost_data)
cost_data <- fire_data%>%
group_by(IncidentGroup)%>%
summarise(total_cost = sum(`Notional Cost (£)`, na.rm = TRUE), mean_cost = mean(`Notional Cost (£)`, na.rm = TRUE), Number_of_Alarms=n())
print(cost_data)
fire_data <- mutate(fire_data, response_time =FirstPumpArriving_AttendanceTime ) %>%filter(!is.na(response_time))
mean_time_incidentgroup  <- fire_data %>% group_by(IncidentGroup) %>% summarise(mean=mean(response_time,na.rm=T ),Frequency=n())
overall_meantime = mean(fire_data$FirstPumpArriving_AttendanceTime)
print(overall_meantime)
print(mean_time_incidentgroup)
ggplot(data = fire_data, aes(FirstPumpArriving_AttendanceTime)) +
geom_histogram(binwidth = 1, na.rm = TRUE , color = "orange") + geom_vline(xintercept = mean(fire_data$FirstPumpArriving_AttendanceTime, na.rm = T), color="black")+
labs(x = "Distribution of Response Time ", y = "Frequency",title=" Distribution of Overall Mean Response Time")
ggplot(data = fire_data, aes(FirstPumpArriving_AttendanceTime, color = IncidentGroup)) +
geom_histogram(binwidth = 1, na.rm = TRUE ) +
geom_vline(xintercept = mean(fire_data$FirstPumpArriving_AttendanceTime, na.rm = T), color="black")+
facet_grid(IncidentGroup~.) +
xlim(0,700)+
labs(x = "Distribution of Response Time ", y = "Frequency of Incidents", title = "Mean Response Time for Different Incidents")
(fire_data.summary <- fire_data %>% summarise(mean_time=mean(response_time, na.rm=TRUE), sd_time=sd(response_time, na.rm=TRUE), N_time=n()))
fire_data.E.G <- fire_data %>% filter(IncGeo_BoroughName %in% c("EALING", "GREENWICH"), na.rm=TRUE)                                                       #filtering Ealing and greenwich
fire_data.E.G.summarise<-fire_data.E.G  %>% group_by(IncGeo_BoroughName) %>% summarise(Mean=mean(response_time , na.rm=TRUE), Freqquency = n()) #summary table for Ealing and Greenwich
print(fire_data.E.G.summarise)
ggplot(fire_data.E.G, aes(x=response_time)) +
geom_histogram(aes(y=..density..), binwidth=2) +
stat_function(fun=function(x) {dnorm(x, mean=fire_data.summary$mean_time, sd=fire_data.summary$sd_time)}, col="red") + geom_vline(data=fire_data.summary, mapping=aes(xintercept=fire_data.summary$mean_time), col="white") +
labs(x="Response Time", y="Density", title="Distribution of Overall Response Time Graph")
ggplot(fire_data.E.G, aes(response_time,..density.., fill=IncGeo_BoroughName)) + geom_histogram(binwidth=2,position="identity", alpha=.5) + labs(x="Response Time", y="Density", fill="IncGeo_BoroughName", title="Distribution of Response Time from Eagline and Greenwich") + geom_vline(data=fire_data.E.G.summarise, mapping=aes(xintercept=fire_data.E.G.summarise$Mean), col="white")
t_test<-t.test(
response_time~IncGeo_BoroughName,
data=fire_data.E.G
)
print(t_test)
